#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(unsigned int i=a;i<b;++i)
string initial;
bool isValid(string beg)
{
    unsigned int i=0,j=0;
    while(j<initial.size() &&i<beg.size())
    {
        if(beg[i]==initial[j])
            i++;
        j++;
    }
    if(i==beg.size())
        return true;
    return false;
}
int minimunConcat(string beg, string goal)
{
    
    beg+=goal[0];
    if(isValid(beg))
    {
        if(goal.size()==1)
            return 1;
    }
    else return INT_MAX;
    goal.erase(goal.begin());
    return min( minimunConcat ("",goal ) +1, minimunConcat(beg,goal) );
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    string goal;
    cin>>initial>>goal;
    vector<int> vInit(26),vGoal(26);
    fill(vInit.begin(),vInit.end(),0);
    fill(vGoal.begin(),vGoal.end(),0);
    FOR(i,0,initial.size())
    {
        vInit[initial[i]-'a']=1;
    }
    FOR(i,0,goal.size())
    {
        vGoal[goal[i]-'a']=1;
    }
    FOR(i,0,26)
    {
        if(vGoal[i]==1 && vInit[i]==0)
        {
            cout<<-1;
            return 0;
        }
    }

    int ans=minimunConcat("",goal);
    cout<<ans;
    return 0;
}
