#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(unsigned int i=a;i<b;++i)
int getLen(int r,int c, vector<vector<int>> grid)
{
    vector<int> tempAns;
    int colSiz=-1,j=c;
    while(grid[r][j]==1 && j<grid[r].size())
    {
        for(int i=r;i<grid.size();++i)
        {
            if(grid[i][j]==0)
            {
                if(colSiz<0)
                {
                    colSiz=(i-r);
                }
                if((i-r)<colSiz)
                {
                    tempAns.emplace_back(colSiz*(j-c+1));
                    colSiz=(i-r);
                    
                }
                break;
            }
        }
        if(colSiz<0)
        {
            colSiz=grid.size()-r;
        }
        j++;
    }
    tempAns.emplace_back(colSiz*(j-c));
    return(*max_element(tempAns.begin(),tempAns.end()));
}
int biggestTable(vector<vector<int>> grid)
{
    int ans=0;
    FOR(i,0,grid.size())
    {
        FOR(j,0,grid[i].size())
        {
            if(grid[i][j]==1)
            {
                int temp=getLen(i,j,grid);
                if(ans<temp)
                    ans=temp;
            }
        }
    }
    return ans;
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int r,c;
    cin>>r>>c;
    vector<vector<int>> grid(r);
    FOR(i,0,r)
    {
        string s;
        cin>>s;
        FOR(j,0,c)
        {
            grid[i].emplace_back(s[j]-'0');
        }
    }
    int ans=biggestTable(grid);
    cout<<ans;
    return 0;
}
